name: CI/CD
on:
  push:
    branches:
      - deploy-to-ecs-fargate  # Trigger the workflow on push to this branch

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'  # Specify your AWS region

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build, tag, and push Docker image to Amazon ECR
      - name: Build, tag, and push Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: aziz  # Your ECR repository name
        run: |
          # Build Docker image
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          
          # Push Docker image to ECR
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG

          # Output the image URL for use in other steps
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      # Step 5: Fill in the new image ID in the ECS task definition
      - name: Update ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}  # Path to ECS task definition JSON
          container-name: ${{ secrets.CONTAINER_NAME }}  # Name of the container in the task definition
          image: ${{ env.image }}  # Use the output image URL from previous step

      # Step 6: Deploy the updated ECS task definition
      - name: Deploy ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}  # Updated task definition
          service: aziz-service  # Name of your ECS service
          cluster: Dockercluster  # Name of your ECS cluster
          wait-for-service-stability: true
